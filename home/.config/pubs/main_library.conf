
[main]

# Where the pubs repository files (bibtex, metadata, notes) are located
pubsdir = ~/Literature/main_library

# Where the documents files are located (default: $(pubsdir)/doc/)
docsdir = ~/Literature/main_library/doc

max_authors = 0

# Specify if a document should be copied or moved in the docdir, or only
# linked when adding a publication.
doc_add = copy

# the command to use when opening document files
open_cmd = zathura

edit_cmd = kitty -T "wofi-pubs edit" --start-as normal nvim

note_extension = md

debug = False
editor = '''"alacritty -t 'Pubs edit' -e nvim"'''

[formating]

# Enable bold formatting, if the terminal supports it.
bold = True

# Enable italics, if the terminal supports it.
italics = True

# Enable colors, if the terminal supports it.
color = True


[theme]

# Here you can define the color theme used by pubs, if enabled in the
# 'formating' section. Predefined theme are available at:
# https://github.com/pubs/pubs/blob/master/extra/themes.md

# Available colors are: 'black', 'red', 'green', 'yellow', 'blue', 'purple',
# 'cyan', and 'grey'. Bold colors are available by prefixing 'b' in front of
# the color name ('bblack', 'bred', etc.), italic colors by prefixing 'i',
# and bold italic by prefixing 'bi'. Finally, 'bold', 'italic' and
# 'bolditalic' can be used to apply formatting without changing the color.
# For no color, use an empty string ''

# messages
ok = green
warning = yellow
error = red

# ui elements
filepath = bold
citekey = purple
tag = cyan

# bibliographic fields
author = bold
title = ""
publisher = italic
year = bold
volume = bold
pages = ""


[plugins]
# Comma-separated list of the plugins to load.
# Currently pubs comes with built-in plugins alias and git.
active = alias, git

[[alias]]
# new subcommands can be defined, e.g.:
# print = open --with lp
# evince = open --with evince
ls = !pubs --force-colors list | less -r
docarxiv = !wget -U 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.6) Gecko/20070802 SeaMonkey/1.1.4' -O /tmp/temp_pubs.pdf $1 && pubs doc add /tmp/temp_pubs.pdf $2
# new subcommands can be defined, e.g.:
# print = open --with lp
# evince = open --with evince

# shell commands can also be defined, by prefixing them with a bang `!`, e.g:
# count = !pubs list -k | wc -l

# aliases can also be defined with descriptions using the following configobj
# subsectioning.  NOTE: any aliases defined this way should come after all other
# aliases, otherwise simple aliases will be ignored.
# [[[count]]]
# command = !pubs list -k | wc -l
# description = lists number of pubs in repo

[[git]]
# The git plugin will commit changes to the repository in a git repository
# created at the root of the pubs directory. All detected changes will be
# commited every time a change is made by a pubs command.
# The plugin also propose the `pubs git` subcommand, to directly send git
# commands to the pubs repository. Therefore, `pubs git status` is equivalent
# to `git -C <pubsdir> status`, with the `-C` flag instructing
# to invoke git as if the current directory was <pubsdir>. Note that a
# limitation of the subcommand is that you cannot use git commands with the
# `-c` option (pubs will interpret it first.)

# if False, will display git output when automatic commit are made.
# Invocation of `pubs git` will always have output displayed.
quiet = False
# if True, git will not automatically commit changes
manual = False
# if True, color will be conserved from git output (this add `-c color:always`
# to the git invocation).
force_color = True


[internal]
# The version of this configuration file. Do not edit.
version = 0.8.2-r1

